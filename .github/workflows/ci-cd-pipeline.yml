name: CI/CD Pipeline for Selenium with Allure Report

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  pull_request:
    branches:
      - main  # Optional: Trigger on pull requests to the main branch

jobs:
  test:
    runs-on: windows-latest  # Use the Windows runner instead of ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Java (Adjust version as needed)
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'  # Use the Java version compatible with your project

    # Step 3: Install Maven using Chocolatey
    - name: Install Maven using Chocolatey
      run: choco install maven

    # Step 4: Cache Maven dependencies (optional but speeds up the process)
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: C:\tools\apache-maven\apache-maven-3.8.1\lib
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Step 5: Run Maven tests and generate Allure results
    - name: Run Maven tests and generate Allure results
      run: mvn clean test -Dallure.results.directory=target/allure-results

    # Step 6: Generate Allure Report
    - name: Generate Allure Report
      run: mvn allure:report

    # Step 7: Upload Allure Report as an artifact
    - name: Upload Allure Report
      uses: actions/upload-artifact@v3
      with:
        name: allure-report
        path: target/site/allure-maven
